#!/bin/bash

set -e
trap exit INT TERM

################################################################################

SOURCE=""
OUTPUT=""
while [ $# -gt 0 ] ; do
key="$1"
case $key in
  --source) SOURCE="$2";  shift; shift; ;;
  --output) OUTPUT="$2";  shift; shift; ;;
  *)                      shift;        ;;
esac
done

################################################################################

if [ -z "${SOURCE}" ] ; then
  (>&2 echo "[error] source package not provided")
  exit 1
fi

if [ -z "${OUTPUT}" ] ; then
  (>&2 echo "[error] output not provided")
  exit 1
fi

################################################################################

lifecycle::scala::test() {
  local dir="$1"
  if [ -z ${dir} -o ! -d ${dir} ] ; then
    return
  fi

  local output="$2"
  local target=$(basename $dir)

  cd ${dir} && sbt \
    -Dsbt.coursier.home="${dir}/.coursier" \
    -Dsbt.ivy.home="${dir}/.ivy" \
    coverage \
    test \
    coverageReport

  mkdir -p ${output}/${target}-coverage

  cp -r \
    ${dir}/target/scala-2.13/scoverage-report/* \
    ${output}/${target}-coverage/
}

################################################################################

lifecycle::scala::test \
  ${SOURCE} \
  ${OUTPUT}
