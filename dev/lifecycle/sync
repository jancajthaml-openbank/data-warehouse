#!/bin/bash

set -eu
trap exit INT TERM

################################################################################

SOURCE=""
while [ $# -gt 0 ] ; do
key="$1"
case $key in
  --source)  SOURCE="$2";  shift; shift; ;;
  *)                       shift;        ;;
esac
done

################################################################################

if [ -z "${SOURCE}" ] ; then
  (>&2 echo "[error] source package not provided")
  exit 1
fi

################################################################################

lifecycle::scala::sync() {
  local dir="$1"
  if [ -z ${dir} -o ! -d ${dir} ] ; then
    return
  fi

  if [ -d ${dir}/.coursier ] ; then
    rm -rf ${dir}/.coursier
  fi

  if [ -d ${dir}/target ] ; then
    rm -rf ${dir}/target
  fi

  if [ -d ${dir}/project/target ] ; then
    rm -rf ${dir}/project/target
  fi

  if [ -d ${dir}/project/project/target ] ; then
    rm -rf ${dir}/project/project/target
  fi

  cd ${dir} && sbt \
    -Dsbt.coursier.home="${dir}/.coursier" \
    \
    update \
    evicted
}

################################################################################

lifecycle::scala::sync \
  ${SOURCE}
