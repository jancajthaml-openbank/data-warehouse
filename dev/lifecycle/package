#!/bin/bash

set -eu
trap exit INT TERM

################################################################################

ARCH="amd64"
PLATFORM="linux"
SOURCE=""
OUTPUT=""
while [ $# -gt 0 ] ; do
key="$1"
case $key in
  --arch)   ARCH=${2#*/}; PLATFORM=${2%%/*}; shift; shift; ;;
  --source) SOURCE="$2";                     shift; shift; ;;
  --output) OUTPUT="$2";                     shift; shift; ;;
  *)                                         shift;        ;;
esac
done

################################################################################

if [ -z "${SOURCE}" ] ; then
  (>&2 echo "[error] source package not provided")
  exit 1
fi

if [ -z "${OUTPUT}" ] ; then
  (>&2 echo "[error] output not provided")
  exit 1
fi


OUTPUT_FILE=${OUTPUT}/$(basename ${SOURCE})-${PLATFORM}-${ARCH}

################################################################################

lifecycle::scala::pack() {
  local dir="$1"
  if [ -z ${dir} -o ! -d ${dir} ] ; then
    return
  fi

  local output="$2"
  if [ -z ${output} ] ; then
    return
  fi

  if [ -f ${output} ] ; then
    rm -f ${output}
  fi


  cd ${dir} && sbt -Dsbt.ivy.home=${dir}/.ivy pack

  if [ -f ${output} ] ; then
    rm -f ${output}
  fi
  mkdir -p ${output}
  cp -R ${dir}/target/pack/bin ${output}
  cp -R ${dir}/target/pack/lib ${output}

  echo "[info] ${output} packed"

  du -hs ${output}
}


################################################################################

lifecycle::scala::pack \
  ${SOURCE} \
  ${OUTPUT_FILE}
